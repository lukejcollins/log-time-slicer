name: Build and Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: linux-x64
            binary_name: log-time-slicer
          - os: windows-latest
            target: windows-x64
            binary_name: log-time-slicer.exe

    outputs:
      linux_binary: ${{ steps.set-output.outputs.linux_binary }}
      windows_binary: ${{ steps.set-output.outputs.windows_binary }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build binary
      run: |
        pyinstaller --onefile main.py --name ${{ matrix.binary_name }}
      env:
        TARGET: ${{ matrix.target }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.binary_name }}
        path: dist/${{ matrix.binary_name }}

    - name: Set output for Linux
      if: matrix.os == 'ubuntu-latest'
      id: set-output-linux
      run: echo "::set-output name=linux_binary::log-time-slicer"

    - name: Set output for Windows
      if: matrix.os == 'windows-latest'
      id: set-output-windows
      run: echo "::set-output name=windows_binary::log-time-slicer.exe"

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.linux_binary }}
        path: ./dist

    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.windows_binary }}
        path: ./dist

    - name: Upload Linux binary to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/log-time-slicer/log-time-slicer
        asset_name: log-time-slicer
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows binary to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/log-time-slicer.exe/log-time-slicer.exe
        asset_name: log-time-slicer.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
